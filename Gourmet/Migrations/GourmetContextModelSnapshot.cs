// <auto-generated />
using Gourmet;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gourmet.Migrations
{
    [DbContext(typeof(GourmetContext))]
    partial class GourmetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Gourmet.Alimento", b =>
                {
                    b.Property<int>("AlimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Calorias")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GrupoAlim")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("AlimentoId");

                    b.ToTable("Alimentos");
                });

            modelBuilder.Entity("Gourmet.Comida", b =>
                {
                    b.Property<int>("ComidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("ComidaId");

                    b.ToTable("Comidas");
                });

            modelBuilder.Entity("Gourmet.ComidaIngrediente", b =>
                {
                    b.Property<int>("ComidaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IngredienteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ComidaId", "IngredienteId");

                    b.HasIndex("IngredienteId");

                    b.ToTable("ComidaIngredientes");
                });

            modelBuilder.Entity("Gourmet.Ingrediente", b =>
                {
                    b.Property<int>("IngredienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlimentoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnidadDeMedida")
                        .HasColumnType("INTEGER");

                    b.HasKey("IngredienteId");

                    b.HasIndex("AlimentoId");

                    b.ToTable("Ingredientes");
                });

            modelBuilder.Entity("Gourmet.Recetario", b =>
                {
                    b.Property<int>("RecetarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("RecetarioId");

                    b.ToTable("Recetarios");
                });

            modelBuilder.Entity("Gourmet.RecetarioComida", b =>
                {
                    b.Property<int>("RecetarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComidaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RecetarioId", "ComidaId");

                    b.HasIndex("ComidaId");

                    b.ToTable("RecetarioComidas");
                });

            modelBuilder.Entity("Gourmet.ComidaIngrediente", b =>
                {
                    b.HasOne("Gourmet.Comida", "Comida")
                        .WithMany("ComidaIngredientes")
                        .HasForeignKey("ComidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gourmet.Ingrediente", "Ingrediente")
                        .WithMany("ComidaIngredientes")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gourmet.Ingrediente", b =>
                {
                    b.HasOne("Gourmet.Alimento", "Alimento")
                        .WithMany("Ingredientes")
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gourmet.RecetarioComida", b =>
                {
                    b.HasOne("Gourmet.Comida", "Comida")
                        .WithMany("RecetarioComidas")
                        .HasForeignKey("ComidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gourmet.Recetario", "Recetario")
                        .WithMany("RecetarioComidas")
                        .HasForeignKey("RecetarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
